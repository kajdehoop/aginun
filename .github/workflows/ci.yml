name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Cache dependencies so they can be reused by following jobs
      - uses: actions/cache@v2
        # Use this to check for `cache-hit` below
        id: npm-cache
        with:
          path: node_modules
          # Bust cache when we update dependencies
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.OS }}-
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: npm ci
        # Only install dependencies when not found in cache
        if: steps.npm-cache.outputs.cache-hit != 'true'
  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Use cached dependencies
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-
            ${{ runner.OS }}-
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: npm run lint
  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: npm run build
  test:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - run: npm run test:unit
